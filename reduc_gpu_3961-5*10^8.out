TamaÃ±o del array: 500000000
Time taken by reduction operation using a function: 42.9 s Â± 25.9 ms per loop (mean Â± std. dev. of 2 runs, 1 loop each)
And the result of the sum of numbers in the range [0, value) is: 249996409.08158472

Time taken by reduction operation using numpy.sum(): 191 ms Â± 74.5 Âµs per loop (mean Â± std. dev. of 2 runs, 10 loops each)
Now, the result using numpy.sum(): 249996409.08155015 
 
Time taken by reduction operation using numpy.ndarray.sum(): 191 ms Â± 28.3 Âµs per loop (mean Â± std. dev. of 2 runs, 10 loops each)
Now, the result using numpy.ndarray.sum(): 249996409.08155015
Time taken by reduction operation using CuPy sum(): 14.9 ms Â± 650 ns per loop (mean Â± std. dev. of 2 runs, 1,000 loops each)
Now, the result using CuPy sum(): 249998748.55772445
[0;31m---------------------------------------------------------------------------[0m
[0;31mOutOfMemoryError[0m                          Traceback (most recent call last)
Cell [0;32mIn[1], line 35[0m
[1;32m     32[0m     [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mExecution time: [39m[38;5;132;01m{[39;00mend_time [38;5;241m-[39m start_time[38;5;132;01m:[39;00m[38;5;124m.6f[39m[38;5;132;01m}[39;00m[38;5;124m seconds[39m[38;5;124m"[39m)
[1;32m     34[0m [38;5;66;03m# Llamar a la funciÃ³n con el valor de `value`[39;00m
[0;32m---> 35[0m [43mcalculate_with_numba[49m[43m([49m[43mvalue[49m[43m)[49m

Cell [0;32mIn[1], line 19[0m, in [0;36mcalculate_with_numba[0;34m(value)[0m
[1;32m     14[0m [38;5;124;03m"""[39;00m
[1;32m     15[0m [38;5;124;03mCalcula la suma de un array usando un kernel de reducciÃ³n en GPU con Numba.[39;00m
[1;32m     16[0m [38;5;124;03mMide y devuelve el tiempo de ejecuciÃ³n.[39;00m
[1;32m     17[0m [38;5;124;03m"""[39;00m
[1;32m     18[0m [38;5;66;03m# Crear el array en la GPU usando CuPy y `value`[39;00m
[0;32m---> 19[0m X_gpu [38;5;241m=[39m [43mcp[49m[38;5;241;43m.[39;49m[43mrandom[49m[38;5;241;43m.[39;49m[43mrand[49m[43m([49m[43mvalue[49m[43m)[49m
[1;32m     20[0m result [38;5;241m=[39m cp[38;5;241m.[39marray([[38;5;241m0[39m], dtype[38;5;241m=[39mcp[38;5;241m.[39mfloat32)
[1;32m     22[0m [38;5;66;03m# Configurar el nÃºmero de threads y bloques[39;00m

File [0;32m/home/modules/anaconda3-2023/lib/python3.10/site-packages/cupy/random/_sample.py:44[0m, in [0;36mrand[0;34m(*size, **kwarg)[0m
[1;32m     41[0m [38;5;28;01mif[39;00m kwarg:
[1;32m     42[0m     [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([38;5;124m'[39m[38;5;124mrand() got unexpected keyword arguments [39m[38;5;132;01m%s[39;00m[38;5;124m'[39m
[1;32m     43[0m                     [38;5;241m%[39m [38;5;124m'[39m[38;5;124m, [39m[38;5;124m'[39m[38;5;241m.[39mjoin(kwarg[38;5;241m.[39mkeys()))
[0;32m---> 44[0m [38;5;28;01mreturn[39;00m [43mrandom_sample[49m[43m([49m[43msize[49m[38;5;241;43m=[39;49m[43msize[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m)[49m

File [0;32m/home/modules/anaconda3-2023/lib/python3.10/site-packages/cupy/random/_sample.py:156[0m, in [0;36mrandom_sample[0;34m(size, dtype)[0m
[1;32m    140[0m [38;5;124;03m"""Returns an array of random values over the interval ``[0, 1)``.[39;00m
[1;32m    141[0m 
[1;32m    142[0m [38;5;124;03mThis is a variant of :func:`cupy.random.rand`.[39;00m
[0;32m   (...)[0m
[1;32m    153[0m 
[1;32m    154[0m [38;5;124;03m"""[39;00m
[1;32m    155[0m rs [38;5;241m=[39m _generator[38;5;241m.[39mget_random_state()
[0;32m--> 156[0m [38;5;28;01mreturn[39;00m [43mrs[49m[38;5;241;43m.[39;49m[43mrandom_sample[49m[43m([49m[43msize[49m[38;5;241;43m=[39;49m[43msize[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m)[49m

File [0;32m/home/modules/anaconda3-2023/lib/python3.10/site-packages/cupy/random/_generator.py:629[0m, in [0;36mRandomState.random_sample[0;34m(self, size, dtype)[0m
[1;32m    627[0m [38;5;28;01mif[39;00m size [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    628[0m     size [38;5;241m=[39m ()
[0;32m--> 629[0m out [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_random_sample_raw[49m[43m([49m[43msize[49m[43m,[49m[43m [49m[43mdtype[49m[43m)[49m
[1;32m    630[0m RandomState[38;5;241m.[39m_mod1_kernel(out)
[1;32m    631[0m [38;5;28;01mreturn[39;00m out

File [0;32m/home/modules/anaconda3-2023/lib/python3.10/site-packages/cupy/random/_generator.py:611[0m, in [0;36mRandomState._random_sample_raw[0;34m(self, size, dtype)[0m
[1;32m    608[0m [38;5;28;01mfrom[39;00m [38;5;21;01mcupy_backends[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcuda[39;00m[38;5;21;01m.[39;00m[38;5;21;01mlibs[39;00m [38;5;28;01mimport[39;00m curand
[1;32m    610[0m dtype [38;5;241m=[39m _check_and_get_dtype(dtype)
[0;32m--> 611[0m out [38;5;241m=[39m [43mcupy[49m[38;5;241;43m.[39;49m[43mempty[49m[43m([49m[43msize[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m)[49m
[1;32m    612[0m [38;5;28;01mif[39;00m dtype[38;5;241m.[39mchar [38;5;241m==[39m [38;5;124m'[39m[38;5;124mf[39m[38;5;124m'[39m:
[1;32m    613[0m     func [38;5;241m=[39m curand[38;5;241m.[39mgenerateUniform

File [0;32m/home/modules/anaconda3-2023/lib/python3.10/site-packages/cupy/_creation/basic.py:31[0m, in [0;36mempty[0;34m(shape, dtype, order)[0m
[1;32m     12[0m [38;5;28;01mdef[39;00m [38;5;21mempty[39m(
[1;32m     13[0m         shape: _ShapeLike,
[1;32m     14[0m         dtype: DTypeLike [38;5;241m=[39m [38;5;28mfloat[39m,
[1;32m     15[0m         order: _OrderCF [38;5;241m=[39m [38;5;124m'[39m[38;5;124mC[39m[38;5;124m'[39m,
[1;32m     16[0m ) [38;5;241m-[39m[38;5;241m>[39m NDArray[Any]:
[1;32m     17[0m     [38;5;124;03m"""Returns an array without initializing the elements.[39;00m
[1;32m     18[0m 
[1;32m     19[0m [38;5;124;03m    Args:[39;00m
[0;32m   (...)[0m
[1;32m     29[0m 
[1;32m     30[0m [38;5;124;03m    """[39;00m
[0;32m---> 31[0m     [38;5;28;01mreturn[39;00m [43mcupy[49m[38;5;241;43m.[39;49m[43mndarray[49m[43m([49m[43mshape[49m[43m,[49m[43m [49m[43mdtype[49m[43m,[49m[43m [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m)[49m

File [0;32mcupy/_core/core.pyx:132[0m, in [0;36mcupy._core.core.ndarray.__new__[0;34m()[0m

File [0;32mcupy/_core/core.pyx:220[0m, in [0;36mcupy._core.core._ndarray_base._init[0;34m()[0m

File [0;32mcupy/cuda/memory.pyx:738[0m, in [0;36mcupy.cuda.memory.alloc[0;34m()[0m

File [0;32mcupy/cuda/memory.pyx:1424[0m, in [0;36mcupy.cuda.memory.MemoryPool.malloc[0;34m()[0m

File [0;32mcupy/cuda/memory.pyx:1445[0m, in [0;36mcupy.cuda.memory.MemoryPool.malloc[0;34m()[0m

File [0;32mcupy/cuda/memory.pyx:1116[0m, in [0;36mcupy.cuda.memory.SingleDeviceMemoryPool.malloc[0;34m()[0m

File [0;32mcupy/cuda/memory.pyx:1137[0m, in [0;36mcupy.cuda.memory.SingleDeviceMemoryPool._malloc[0;34m()[0m

File [0;32mcupy/cuda/memory.pyx:1382[0m, in [0;36mcupy.cuda.memory.SingleDeviceMemoryPool._try_malloc[0;34m()[0m

File [0;32mcupy/cuda/memory.pyx:1385[0m, in [0;36mcupy.cuda.memory.SingleDeviceMemoryPool._try_malloc[0;34m()[0m

[0;31mOutOfMemoryError[0m: Out of memory allocating 4,000,000,000 bytes (allocated so far: 4,000,000,000 bytes).
